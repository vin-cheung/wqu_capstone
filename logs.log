2022-07-02 06:02:50,337:WARNING:No module named 'cuml'.
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-07-02 06:02:50,338:WARNING:No module named 'cuml'.
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-07-02 06:02:50,339:WARNING:No module named 'cuml'.
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-07-02 06:02:50,339:WARNING:No module named 'cuml'.
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-07-02 06:02:50,479:INFO:PyCaret RegressionExperiment
2022-07-02 06:02:50,480:INFO:Logging name: reg-default-name
2022-07-02 06:02:50,480:INFO:ML Usecase: MLUsecase.REGRESSION
2022-07-02 06:02:50,480:INFO:version 3.0.0.rc2
2022-07-02 06:02:50,480:INFO:Initializing setup()
2022-07-02 06:02:50,480:INFO:self.USI: 250c
2022-07-02 06:02:50,480:INFO:self.variable_keys: {'X_train', 'USI', 'variable_keys', '_available_plots', '_all_metrics', 'target_param', 'y_test', 'seed', 'data', 'transform_target_param', '_ml_usecase', 'fold_shuffle_param', 'y', 'html_param', 'idx', 'gpu_param', 'n_jobs_param', 'exp_id', '_gpu_n_jobs_param', 'fold_groups_param', 'log_plots_param', 'exp_name_log', 'fold_generator', 'display_container', '_all_models', 'X_test', 'logging_param', 'transform_target_method_param', 'X', 'master_model_container', 'y_train', 'pipeline', '_all_models_internal', 'memory'}
2022-07-02 06:02:50,480:INFO:Checking environment
2022-07-02 06:02:50,480:INFO:python_version: 3.9.12
2022-07-02 06:02:50,481:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2022-07-02 06:02:50,481:INFO:machine: AMD64
2022-07-02 06:02:50,481:INFO:platform: Windows-10-10.0.22000-SP0
2022-07-02 06:02:50,481:INFO:Memory: svmem(total=17056821248, available=5276491776, percent=69.1, used=11780329472, free=5276491776)
2022-07-02 06:02:50,481:INFO:Physical Core: 4
2022-07-02 06:02:50,481:INFO:Logical Core: 8
2022-07-02 06:02:50,481:INFO:Checking libraries
2022-07-02 06:02:50,481:INFO:System:
2022-07-02 06:02:50,481:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2022-07-02 06:02:50,481:INFO:executable: C:\ProgramData\Anaconda3\envs\lowcode\python.exe
2022-07-02 06:02:50,481:INFO:   machine: Windows-10-10.0.22000-SP0
2022-07-02 06:02:50,481:INFO:PyCaret required dependencies:
2022-07-02 06:02:50,482:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils.
  warnings.warn("Setuptools is replacing distutils.")

2022-07-02 06:02:50,942:INFO:                 pip: 21.2.4
2022-07-02 06:02:50,942:INFO:          setuptools: 60.10.0
2022-07-02 06:02:50,942:INFO:             pycaret: 3.0.0.rc2
2022-07-02 06:02:50,942:INFO:             IPython: 8.4.0
2022-07-02 06:02:50,942:INFO:          ipywidgets: 8.0.0rc0
2022-07-02 06:02:50,942:INFO:                tqdm: 4.64.0
2022-07-02 06:02:50,942:INFO:               numpy: 1.21.6
2022-07-02 06:02:50,942:INFO:              pandas: 1.4.2
2022-07-02 06:02:50,942:INFO:              jinja2: 3.1.2
2022-07-02 06:02:50,943:INFO:               scipy: 1.8.1
2022-07-02 06:02:50,943:INFO:              joblib: 1.1.0
2022-07-02 06:02:50,943:INFO:             sklearn: 1.1.1
2022-07-02 06:02:50,943:INFO:                pyod: Installed but version unavailable
2022-07-02 06:02:50,943:INFO:            imblearn: 0.9.1
2022-07-02 06:02:50,943:INFO:   category_encoders: 2.5.0
2022-07-02 06:02:50,943:INFO:            lightgbm: 3.3.2
2022-07-02 06:02:50,943:INFO:               numba: 0.55.2
2022-07-02 06:02:50,943:INFO:            requests: 2.27.1
2022-07-02 06:02:50,943:INFO:          matplotlib: 3.5.2
2022-07-02 06:02:50,943:INFO:          scikitplot: 0.3.7
2022-07-02 06:02:50,943:INFO:         yellowbrick: 1.4
2022-07-02 06:02:50,943:INFO:              plotly: 5.8.0
2022-07-02 06:02:50,943:INFO:             kaleido: 0.2.1
2022-07-02 06:02:50,943:INFO:         statsmodels: 0.13.2
2022-07-02 06:02:50,943:INFO:              sktime: 0.11.4
2022-07-02 06:02:50,943:INFO:               tbats: Installed but version unavailable
2022-07-02 06:02:50,943:INFO:            pmdarima: 1.8.5
2022-07-02 06:02:50,943:INFO:              psutil: 5.9.1
2022-07-02 06:02:50,943:INFO:None
2022-07-02 06:02:50,943:INFO:Set up data.
2022-07-02 06:02:50,948:INFO:Set up train/test split.
2022-07-02 06:02:50,951:INFO:Set up folding strategy.
2022-07-02 06:02:50,951:INFO:Assigning column types.
2022-07-02 06:02:50,954:INFO:Preparing preprocessing pipeline...
2022-07-02 06:02:50,955:INFO:Set up simple imputation.
2022-07-02 06:02:50,981:INFO:Finished creating preprocessing pipeline.
2022-07-02 06:02:50,984:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\Vincent\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['MCOILBRENTEU', 'MCOILWTICO', 'MHHNGSP', 'PBARLUSDM', 'PMAIZMTUSDM', 'PNGASEUUSDM', 'PSOYBUSDM', 'PWHEAMTUSDM'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer(fill_value='constant', strategy='constant')))])
2022-07-02 06:02:50,984:INFO:Creating final display dataframe.
2022-07-02 06:02:51,026:INFO:Setup display_container:                  Description             Value
0                 Session id              7584
1                     Target            target
2                Target type        Regression
3                 Data shape          (161, 9)
4           Train data shape          (112, 9)
5            Test data shape           (49, 9)
6           Numeric features                 8
7   Rows with missing values              3.7%
8                 Preprocess              True
9            Imputation type            simple
10        Numeric imputation              mean
11    Categorical imputation          constant
12            Fold Generator             KFold
13               Fold Number                10
14                  CPU Jobs                -1
15                   Use GPU             False
16            Log Experiment             False
17           Experiment Name  reg-default-name
18                       USI              250c
2022-07-02 06:02:51,270:INFO:Sof dependency imported: xgboost: 1.6.1
2022-07-02 06:02:51,292:INFO:Sof dependency imported: catboost: 1.0.6
2022-07-02 06:02:51,490:INFO:Sof dependency imported: xgboost: 1.6.1
2022-07-02 06:02:51,493:INFO:Sof dependency imported: catboost: 1.0.6
2022-07-02 06:02:51,500:INFO:setup() successfully completed in 1.02s...............
2022-07-02 06:02:51,516:INFO:Initializing compare_models()
2022-07-02 06:02:51,517:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024DCC67FDC0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000024DCC67FDC0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-07-02 06:02:51,517:INFO:Checking exceptions
2022-07-02 06:02:51,522:INFO:Preparing display monitor
2022-07-02 06:02:51,573:INFO:Initializing Linear Regression
2022-07-02 06:02:51,573:INFO:Total runtime is 0.0 minutes
2022-07-02 06:02:51,579:INFO:SubProcess create_model() called ==================================
2022-07-02 06:02:51,579:INFO:Initializing create_model()
2022-07-02 06:02:51,579:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024DCC67FDC0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024DCC67FCD0>, return_train_score=False, kwargs={})
2022-07-02 06:02:51,580:INFO:Checking exceptions
2022-07-02 06:02:51,581:INFO:Importing libraries
2022-07-02 06:02:51,582:INFO:Copying training dataset
2022-07-02 06:02:51,585:INFO:Defining folds
2022-07-02 06:02:51,585:INFO:Declaring metric variables
2022-07-02 06:02:51,589:INFO:Importing untrained model
2022-07-02 06:02:51,594:INFO:Linear Regression Imported successfully
2022-07-02 06:02:51,603:INFO:Starting cross validation
2022-07-02 06:02:51,609:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-02 06:03:02,485:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:02,494:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:02,605:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:02,810:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:02,823:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:02,840:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:02,926:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:02,952:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:03,084:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:03,128:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:03,147:INFO:Calculating mean and std
2022-07-02 06:03:03,153:INFO:Creating metrics dataframe
2022-07-02 06:03:03,165:INFO:Uploading results into container
2022-07-02 06:03:03,167:INFO:Uploading model into container now
2022-07-02 06:03:03,168:INFO:master_model_container: 1
2022-07-02 06:03:03,169:INFO:display_container: 2
2022-07-02 06:03:03,170:INFO:LinearRegression(n_jobs=-1)
2022-07-02 06:03:03,170:INFO:create_model() successfully completed......................................
2022-07-02 06:03:03,332:INFO:SubProcess create_model() end ==================================
2022-07-02 06:03:03,332:INFO:Creating metrics dataframe
2022-07-02 06:03:03,349:INFO:Initializing Lasso Regression
2022-07-02 06:03:03,350:INFO:Total runtime is 0.1962834636370341 minutes
2022-07-02 06:03:03,358:INFO:SubProcess create_model() called ==================================
2022-07-02 06:03:03,359:INFO:Initializing create_model()
2022-07-02 06:03:03,359:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024DCC67FDC0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024DCC67FCD0>, return_train_score=False, kwargs={})
2022-07-02 06:03:03,359:INFO:Checking exceptions
2022-07-02 06:03:03,364:INFO:Importing libraries
2022-07-02 06:03:03,364:INFO:Copying training dataset
2022-07-02 06:03:03,374:INFO:Defining folds
2022-07-02 06:03:03,374:INFO:Declaring metric variables
2022-07-02 06:03:03,382:INFO:Importing untrained model
2022-07-02 06:03:03,392:INFO:Lasso Regression Imported successfully
2022-07-02 06:03:03,416:INFO:Starting cross validation
2022-07-02 06:03:03,418:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-02 06:03:03,492:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:03,525:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:03,533:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:03,554:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:03,563:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:03,564:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:03,596:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:03,605:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:03,616:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:03,618:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:03,634:INFO:Calculating mean and std
2022-07-02 06:03:03,637:INFO:Creating metrics dataframe
2022-07-02 06:03:03,643:INFO:Uploading results into container
2022-07-02 06:03:03,644:INFO:Uploading model into container now
2022-07-02 06:03:03,645:INFO:master_model_container: 2
2022-07-02 06:03:03,645:INFO:display_container: 2
2022-07-02 06:03:03,646:INFO:Lasso(random_state=7584)
2022-07-02 06:03:03,646:INFO:create_model() successfully completed......................................
2022-07-02 06:03:03,772:INFO:SubProcess create_model() end ==================================
2022-07-02 06:03:03,772:INFO:Creating metrics dataframe
2022-07-02 06:03:03,788:INFO:Initializing Ridge Regression
2022-07-02 06:03:03,788:INFO:Total runtime is 0.20358333985010785 minutes
2022-07-02 06:03:03,795:INFO:SubProcess create_model() called ==================================
2022-07-02 06:03:03,796:INFO:Initializing create_model()
2022-07-02 06:03:03,796:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024DCC67FDC0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024DCC67FCD0>, return_train_score=False, kwargs={})
2022-07-02 06:03:03,796:INFO:Checking exceptions
2022-07-02 06:03:03,799:INFO:Importing libraries
2022-07-02 06:03:03,800:INFO:Copying training dataset
2022-07-02 06:03:03,805:INFO:Defining folds
2022-07-02 06:03:03,806:INFO:Declaring metric variables
2022-07-02 06:03:03,812:INFO:Importing untrained model
2022-07-02 06:03:03,821:INFO:Ridge Regression Imported successfully
2022-07-02 06:03:03,835:INFO:Starting cross validation
2022-07-02 06:03:03,836:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-02 06:03:03,879:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:03,893:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:03,903:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:03,915:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:03,925:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:03,936:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:03,948:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:03,959:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:03,971:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:03,978:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:03,989:INFO:Calculating mean and std
2022-07-02 06:03:03,992:INFO:Creating metrics dataframe
2022-07-02 06:03:03,998:INFO:Uploading results into container
2022-07-02 06:03:03,999:INFO:Uploading model into container now
2022-07-02 06:03:03,999:INFO:master_model_container: 3
2022-07-02 06:03:04,000:INFO:display_container: 2
2022-07-02 06:03:04,000:INFO:Ridge(random_state=7584)
2022-07-02 06:03:04,001:INFO:create_model() successfully completed......................................
2022-07-02 06:03:04,128:INFO:SubProcess create_model() end ==================================
2022-07-02 06:03:04,129:INFO:Creating metrics dataframe
2022-07-02 06:03:04,145:INFO:Initializing Elastic Net
2022-07-02 06:03:04,145:INFO:Total runtime is 0.20953351656595867 minutes
2022-07-02 06:03:04,152:INFO:SubProcess create_model() called ==================================
2022-07-02 06:03:04,152:INFO:Initializing create_model()
2022-07-02 06:03:04,153:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024DCC67FDC0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024DCC67FCD0>, return_train_score=False, kwargs={})
2022-07-02 06:03:04,153:INFO:Checking exceptions
2022-07-02 06:03:04,155:INFO:Importing libraries
2022-07-02 06:03:04,156:INFO:Copying training dataset
2022-07-02 06:03:04,162:INFO:Defining folds
2022-07-02 06:03:04,162:INFO:Declaring metric variables
2022-07-02 06:03:04,169:INFO:Importing untrained model
2022-07-02 06:03:04,176:INFO:Elastic Net Imported successfully
2022-07-02 06:03:04,189:INFO:Starting cross validation
2022-07-02 06:03:04,191:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-02 06:03:04,244:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:04,254:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:04,264:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:04,275:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:04,284:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:04,297:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:04,304:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:04,314:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:04,324:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:04,334:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:04,344:INFO:Calculating mean and std
2022-07-02 06:03:04,346:INFO:Creating metrics dataframe
2022-07-02 06:03:04,356:INFO:Uploading results into container
2022-07-02 06:03:04,357:INFO:Uploading model into container now
2022-07-02 06:03:04,358:INFO:master_model_container: 4
2022-07-02 06:03:04,358:INFO:display_container: 2
2022-07-02 06:03:04,359:INFO:ElasticNet(random_state=7584)
2022-07-02 06:03:04,359:INFO:create_model() successfully completed......................................
2022-07-02 06:03:04,483:INFO:SubProcess create_model() end ==================================
2022-07-02 06:03:04,483:INFO:Creating metrics dataframe
2022-07-02 06:03:04,499:INFO:Initializing Least Angle Regression
2022-07-02 06:03:04,499:INFO:Total runtime is 0.21543346643447878 minutes
2022-07-02 06:03:04,504:INFO:SubProcess create_model() called ==================================
2022-07-02 06:03:04,505:INFO:Initializing create_model()
2022-07-02 06:03:04,505:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024DCC67FDC0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024DCC67FCD0>, return_train_score=False, kwargs={})
2022-07-02 06:03:04,505:INFO:Checking exceptions
2022-07-02 06:03:04,508:INFO:Importing libraries
2022-07-02 06:03:04,508:INFO:Copying training dataset
2022-07-02 06:03:04,515:INFO:Defining folds
2022-07-02 06:03:04,516:INFO:Declaring metric variables
2022-07-02 06:03:04,522:INFO:Importing untrained model
2022-07-02 06:03:04,528:INFO:Least Angle Regression Imported successfully
2022-07-02 06:03:04,540:INFO:Starting cross validation
2022-07-02 06:03:04,541:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-02 06:03:04,584:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-07-02 06:03:04,587:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:04,588:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-07-02 06:03:04,593:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:04,601:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-07-02 06:03:04,605:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:04,611:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-07-02 06:03:04,616:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:04,619:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-07-02 06:03:04,624:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-07-02 06:03:04,625:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:04,629:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:04,639:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-07-02 06:03:04,644:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:04,649:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-07-02 06:03:04,655:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:04,662:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-07-02 06:03:04,667:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:04,669:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-07-02 06:03:04,672:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:04,685:INFO:Calculating mean and std
2022-07-02 06:03:04,688:INFO:Creating metrics dataframe
2022-07-02 06:03:04,693:INFO:Uploading results into container
2022-07-02 06:03:04,694:INFO:Uploading model into container now
2022-07-02 06:03:04,695:INFO:master_model_container: 5
2022-07-02 06:03:04,695:INFO:display_container: 2
2022-07-02 06:03:04,696:INFO:Lars(random_state=7584)
2022-07-02 06:03:04,696:INFO:create_model() successfully completed......................................
2022-07-02 06:03:04,807:INFO:SubProcess create_model() end ==================================
2022-07-02 06:03:04,807:INFO:Creating metrics dataframe
2022-07-02 06:03:04,823:INFO:Initializing Lasso Least Angle Regression
2022-07-02 06:03:04,823:INFO:Total runtime is 0.2208334485689799 minutes
2022-07-02 06:03:04,828:INFO:SubProcess create_model() called ==================================
2022-07-02 06:03:04,829:INFO:Initializing create_model()
2022-07-02 06:03:04,829:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024DCC67FDC0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024DCC67FCD0>, return_train_score=False, kwargs={})
2022-07-02 06:03:04,829:INFO:Checking exceptions
2022-07-02 06:03:04,831:INFO:Importing libraries
2022-07-02 06:03:04,831:INFO:Copying training dataset
2022-07-02 06:03:04,836:INFO:Defining folds
2022-07-02 06:03:04,837:INFO:Declaring metric variables
2022-07-02 06:03:04,843:INFO:Importing untrained model
2022-07-02 06:03:04,849:INFO:Lasso Least Angle Regression Imported successfully
2022-07-02 06:03:04,860:INFO:Starting cross validation
2022-07-02 06:03:04,861:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-02 06:03:04,894:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-07-02 06:03:04,896:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:04,908:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-07-02 06:03:04,909:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:04,911:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-07-02 06:03:04,913:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:04,920:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-07-02 06:03:04,922:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:04,927:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-07-02 06:03:04,928:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:04,939:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-07-02 06:03:04,940:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:04,947:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-07-02 06:03:04,948:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:04,956:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-07-02 06:03:04,958:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:04,966:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-07-02 06:03:04,968:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:04,976:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-07-02 06:03:04,977:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:04,986:INFO:Calculating mean and std
2022-07-02 06:03:04,989:INFO:Creating metrics dataframe
2022-07-02 06:03:04,995:INFO:Uploading results into container
2022-07-02 06:03:04,996:INFO:Uploading model into container now
2022-07-02 06:03:04,996:INFO:master_model_container: 6
2022-07-02 06:03:04,996:INFO:display_container: 2
2022-07-02 06:03:04,997:INFO:LassoLars(random_state=7584)
2022-07-02 06:03:04,997:INFO:create_model() successfully completed......................................
2022-07-02 06:03:05,107:INFO:SubProcess create_model() end ==================================
2022-07-02 06:03:05,107:INFO:Creating metrics dataframe
2022-07-02 06:03:05,122:INFO:Initializing Orthogonal Matching Pursuit
2022-07-02 06:03:05,122:INFO:Total runtime is 0.225816810131073 minutes
2022-07-02 06:03:05,127:INFO:SubProcess create_model() called ==================================
2022-07-02 06:03:05,128:INFO:Initializing create_model()
2022-07-02 06:03:05,128:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024DCC67FDC0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024DCC67FCD0>, return_train_score=False, kwargs={})
2022-07-02 06:03:05,128:INFO:Checking exceptions
2022-07-02 06:03:05,130:INFO:Importing libraries
2022-07-02 06:03:05,130:INFO:Copying training dataset
2022-07-02 06:03:05,135:INFO:Defining folds
2022-07-02 06:03:05,135:INFO:Declaring metric variables
2022-07-02 06:03:05,143:INFO:Importing untrained model
2022-07-02 06:03:05,149:INFO:Orthogonal Matching Pursuit Imported successfully
2022-07-02 06:03:05,160:INFO:Starting cross validation
2022-07-02 06:03:05,161:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-02 06:03:05,197:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-07-02 06:03:05,199:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-07-02 06:03:05,201:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:05,204:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:05,208:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-07-02 06:03:05,212:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:05,214:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-07-02 06:03:05,218:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:05,219:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-07-02 06:03:05,224:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:05,229:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-07-02 06:03:05,233:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:05,237:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-07-02 06:03:05,240:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:05,247:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-07-02 06:03:05,252:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:05,259:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-07-02 06:03:05,262:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-07-02 06:03:05,263:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:05,264:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:05,275:INFO:Calculating mean and std
2022-07-02 06:03:05,278:INFO:Creating metrics dataframe
2022-07-02 06:03:05,283:INFO:Uploading results into container
2022-07-02 06:03:05,284:INFO:Uploading model into container now
2022-07-02 06:03:05,284:INFO:master_model_container: 7
2022-07-02 06:03:05,285:INFO:display_container: 2
2022-07-02 06:03:05,285:INFO:OrthogonalMatchingPursuit()
2022-07-02 06:03:05,285:INFO:create_model() successfully completed......................................
2022-07-02 06:03:05,394:INFO:SubProcess create_model() end ==================================
2022-07-02 06:03:05,394:INFO:Creating metrics dataframe
2022-07-02 06:03:05,409:INFO:Initializing Bayesian Ridge
2022-07-02 06:03:05,409:INFO:Total runtime is 0.23060009082158406 minutes
2022-07-02 06:03:05,414:INFO:SubProcess create_model() called ==================================
2022-07-02 06:03:05,415:INFO:Initializing create_model()
2022-07-02 06:03:05,415:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024DCC67FDC0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024DCC67FCD0>, return_train_score=False, kwargs={})
2022-07-02 06:03:05,415:INFO:Checking exceptions
2022-07-02 06:03:05,417:INFO:Importing libraries
2022-07-02 06:03:05,417:INFO:Copying training dataset
2022-07-02 06:03:05,422:INFO:Defining folds
2022-07-02 06:03:05,423:INFO:Declaring metric variables
2022-07-02 06:03:05,429:INFO:Importing untrained model
2022-07-02 06:03:05,434:INFO:Bayesian Ridge Imported successfully
2022-07-02 06:03:05,445:INFO:Starting cross validation
2022-07-02 06:03:05,446:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-02 06:03:05,493:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:05,496:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:05,504:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:05,515:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:05,525:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:05,534:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:05,547:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:05,554:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:05,563:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:05,570:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:05,579:INFO:Calculating mean and std
2022-07-02 06:03:05,582:INFO:Creating metrics dataframe
2022-07-02 06:03:05,587:INFO:Uploading results into container
2022-07-02 06:03:05,588:INFO:Uploading model into container now
2022-07-02 06:03:05,589:INFO:master_model_container: 8
2022-07-02 06:03:05,589:INFO:display_container: 2
2022-07-02 06:03:05,590:INFO:BayesianRidge()
2022-07-02 06:03:05,590:INFO:create_model() successfully completed......................................
2022-07-02 06:03:05,713:INFO:SubProcess create_model() end ==================================
2022-07-02 06:03:05,713:INFO:Creating metrics dataframe
2022-07-02 06:03:05,729:INFO:Initializing Passive Aggressive Regressor
2022-07-02 06:03:05,729:INFO:Total runtime is 0.23593345483144124 minutes
2022-07-02 06:03:05,734:INFO:SubProcess create_model() called ==================================
2022-07-02 06:03:05,735:INFO:Initializing create_model()
2022-07-02 06:03:05,735:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024DCC67FDC0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024DCC67FCD0>, return_train_score=False, kwargs={})
2022-07-02 06:03:05,735:INFO:Checking exceptions
2022-07-02 06:03:05,737:INFO:Importing libraries
2022-07-02 06:03:05,737:INFO:Copying training dataset
2022-07-02 06:03:05,743:INFO:Defining folds
2022-07-02 06:03:05,743:INFO:Declaring metric variables
2022-07-02 06:03:05,749:INFO:Importing untrained model
2022-07-02 06:03:05,754:INFO:Passive Aggressive Regressor Imported successfully
2022-07-02 06:03:05,767:INFO:Starting cross validation
2022-07-02 06:03:05,768:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-02 06:03:05,812:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:05,817:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:05,827:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:05,829:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:05,839:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:05,851:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:05,856:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:05,871:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:05,876:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:05,882:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:05,892:INFO:Calculating mean and std
2022-07-02 06:03:05,894:INFO:Creating metrics dataframe
2022-07-02 06:03:05,899:INFO:Uploading results into container
2022-07-02 06:03:05,900:INFO:Uploading model into container now
2022-07-02 06:03:05,901:INFO:master_model_container: 9
2022-07-02 06:03:05,901:INFO:display_container: 2
2022-07-02 06:03:05,902:INFO:PassiveAggressiveRegressor(random_state=7584)
2022-07-02 06:03:05,902:INFO:create_model() successfully completed......................................
2022-07-02 06:03:06,015:INFO:SubProcess create_model() end ==================================
2022-07-02 06:03:06,015:INFO:Creating metrics dataframe
2022-07-02 06:03:06,032:INFO:Initializing Huber Regressor
2022-07-02 06:03:06,032:INFO:Total runtime is 0.24098347822825114 minutes
2022-07-02 06:03:06,038:INFO:SubProcess create_model() called ==================================
2022-07-02 06:03:06,038:INFO:Initializing create_model()
2022-07-02 06:03:06,038:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024DCC67FDC0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024DCC67FCD0>, return_train_score=False, kwargs={})
2022-07-02 06:03:06,039:INFO:Checking exceptions
2022-07-02 06:03:06,042:INFO:Importing libraries
2022-07-02 06:03:06,042:INFO:Copying training dataset
2022-07-02 06:03:06,047:INFO:Defining folds
2022-07-02 06:03:06,047:INFO:Declaring metric variables
2022-07-02 06:03:06,052:INFO:Importing untrained model
2022-07-02 06:03:06,058:INFO:Huber Regressor Imported successfully
2022-07-02 06:03:06,069:INFO:Starting cross validation
2022-07-02 06:03:06,070:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-02 06:03:06,186:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-07-02 06:03:06,186:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:06,196:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-07-02 06:03:06,196:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:06,203:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-07-02 06:03:06,204:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:06,230:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-07-02 06:03:06,230:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:06,233:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-07-02 06:03:06,234:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:06,251:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-07-02 06:03:06,252:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:06,258:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-07-02 06:03:06,258:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:06,260:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-07-02 06:03:06,261:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:06,301:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-07-02 06:03:06,301:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:06,314:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-07-02 06:03:06,315:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:06,325:INFO:Calculating mean and std
2022-07-02 06:03:06,328:INFO:Creating metrics dataframe
2022-07-02 06:03:06,334:INFO:Uploading results into container
2022-07-02 06:03:06,335:INFO:Uploading model into container now
2022-07-02 06:03:06,335:INFO:master_model_container: 10
2022-07-02 06:03:06,336:INFO:display_container: 2
2022-07-02 06:03:06,336:INFO:HuberRegressor()
2022-07-02 06:03:06,336:INFO:create_model() successfully completed......................................
2022-07-02 06:03:06,450:INFO:SubProcess create_model() end ==================================
2022-07-02 06:03:06,451:INFO:Creating metrics dataframe
2022-07-02 06:03:06,472:INFO:Initializing K Neighbors Regressor
2022-07-02 06:03:06,472:INFO:Total runtime is 0.24831686417261759 minutes
2022-07-02 06:03:06,478:INFO:SubProcess create_model() called ==================================
2022-07-02 06:03:06,478:INFO:Initializing create_model()
2022-07-02 06:03:06,478:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024DCC67FDC0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024DCC67FCD0>, return_train_score=False, kwargs={})
2022-07-02 06:03:06,478:INFO:Checking exceptions
2022-07-02 06:03:06,481:INFO:Importing libraries
2022-07-02 06:03:06,481:INFO:Copying training dataset
2022-07-02 06:03:06,486:INFO:Defining folds
2022-07-02 06:03:06,486:INFO:Declaring metric variables
2022-07-02 06:03:06,493:INFO:Importing untrained model
2022-07-02 06:03:06,499:INFO:K Neighbors Regressor Imported successfully
2022-07-02 06:03:06,511:INFO:Starting cross validation
2022-07-02 06:03:06,512:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-02 06:03:06,555:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:06,560:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:06,568:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:06,583:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:06,593:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:06,603:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:06,614:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:06,625:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:06,635:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:06,648:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:06,673:INFO:Calculating mean and std
2022-07-02 06:03:06,675:INFO:Creating metrics dataframe
2022-07-02 06:03:06,681:INFO:Uploading results into container
2022-07-02 06:03:06,683:INFO:Uploading model into container now
2022-07-02 06:03:06,683:INFO:master_model_container: 11
2022-07-02 06:03:06,684:INFO:display_container: 2
2022-07-02 06:03:06,684:INFO:KNeighborsRegressor(n_jobs=-1)
2022-07-02 06:03:06,685:INFO:create_model() successfully completed......................................
2022-07-02 06:03:06,798:INFO:SubProcess create_model() end ==================================
2022-07-02 06:03:06,798:INFO:Creating metrics dataframe
2022-07-02 06:03:06,817:INFO:Initializing Decision Tree Regressor
2022-07-02 06:03:06,817:INFO:Total runtime is 0.254066789150238 minutes
2022-07-02 06:03:06,824:INFO:SubProcess create_model() called ==================================
2022-07-02 06:03:06,824:INFO:Initializing create_model()
2022-07-02 06:03:06,824:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024DCC67FDC0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024DCC67FCD0>, return_train_score=False, kwargs={})
2022-07-02 06:03:06,825:INFO:Checking exceptions
2022-07-02 06:03:06,827:INFO:Importing libraries
2022-07-02 06:03:06,827:INFO:Copying training dataset
2022-07-02 06:03:06,833:INFO:Defining folds
2022-07-02 06:03:06,833:INFO:Declaring metric variables
2022-07-02 06:03:06,840:INFO:Importing untrained model
2022-07-02 06:03:06,848:INFO:Decision Tree Regressor Imported successfully
2022-07-02 06:03:06,860:INFO:Starting cross validation
2022-07-02 06:03:06,861:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-02 06:03:06,906:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:06,919:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:06,922:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:06,936:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:06,943:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:06,960:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:06,964:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:06,973:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:06,985:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:06,993:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:07,002:INFO:Calculating mean and std
2022-07-02 06:03:07,004:INFO:Creating metrics dataframe
2022-07-02 06:03:07,010:INFO:Uploading results into container
2022-07-02 06:03:07,011:INFO:Uploading model into container now
2022-07-02 06:03:07,012:INFO:master_model_container: 12
2022-07-02 06:03:07,013:INFO:display_container: 2
2022-07-02 06:03:07,014:INFO:DecisionTreeRegressor(random_state=7584)
2022-07-02 06:03:07,014:INFO:create_model() successfully completed......................................
2022-07-02 06:03:07,127:INFO:SubProcess create_model() end ==================================
2022-07-02 06:03:07,127:INFO:Creating metrics dataframe
2022-07-02 06:03:07,147:INFO:Initializing Random Forest Regressor
2022-07-02 06:03:07,147:INFO:Total runtime is 0.2595667958259582 minutes
2022-07-02 06:03:07,153:INFO:SubProcess create_model() called ==================================
2022-07-02 06:03:07,153:INFO:Initializing create_model()
2022-07-02 06:03:07,153:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024DCC67FDC0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024DCC67FCD0>, return_train_score=False, kwargs={})
2022-07-02 06:03:07,153:INFO:Checking exceptions
2022-07-02 06:03:07,156:INFO:Importing libraries
2022-07-02 06:03:07,157:INFO:Copying training dataset
2022-07-02 06:03:07,163:INFO:Defining folds
2022-07-02 06:03:07,163:INFO:Declaring metric variables
2022-07-02 06:03:07,169:INFO:Importing untrained model
2022-07-02 06:03:07,178:INFO:Random Forest Regressor Imported successfully
2022-07-02 06:03:07,189:INFO:Starting cross validation
2022-07-02 06:03:07,190:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-02 06:03:07,659:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:07,662:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:07,672:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:07,682:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:07,688:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:07,797:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:07,801:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:07,820:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:08,123:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:08,154:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:08,190:INFO:Calculating mean and std
2022-07-02 06:03:08,193:INFO:Creating metrics dataframe
2022-07-02 06:03:08,199:INFO:Uploading results into container
2022-07-02 06:03:08,200:INFO:Uploading model into container now
2022-07-02 06:03:08,201:INFO:master_model_container: 13
2022-07-02 06:03:08,201:INFO:display_container: 2
2022-07-02 06:03:08,202:INFO:RandomForestRegressor(n_jobs=-1, random_state=7584)
2022-07-02 06:03:08,202:INFO:create_model() successfully completed......................................
2022-07-02 06:03:08,322:INFO:SubProcess create_model() end ==================================
2022-07-02 06:03:08,322:INFO:Creating metrics dataframe
2022-07-02 06:03:08,342:INFO:Initializing Extra Trees Regressor
2022-07-02 06:03:08,342:INFO:Total runtime is 0.2794834454854329 minutes
2022-07-02 06:03:08,350:INFO:SubProcess create_model() called ==================================
2022-07-02 06:03:08,351:INFO:Initializing create_model()
2022-07-02 06:03:08,351:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024DCC67FDC0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024DCC67FCD0>, return_train_score=False, kwargs={})
2022-07-02 06:03:08,351:INFO:Checking exceptions
2022-07-02 06:03:08,354:INFO:Importing libraries
2022-07-02 06:03:08,354:INFO:Copying training dataset
2022-07-02 06:03:08,360:INFO:Defining folds
2022-07-02 06:03:08,360:INFO:Declaring metric variables
2022-07-02 06:03:08,368:INFO:Importing untrained model
2022-07-02 06:03:08,377:INFO:Extra Trees Regressor Imported successfully
2022-07-02 06:03:08,391:INFO:Starting cross validation
2022-07-02 06:03:08,393:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-02 06:03:08,751:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:08,753:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:08,758:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:08,777:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:08,806:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:08,859:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:08,927:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:08,933:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:09,156:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:09,173:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:09,211:INFO:Calculating mean and std
2022-07-02 06:03:09,214:INFO:Creating metrics dataframe
2022-07-02 06:03:09,221:INFO:Uploading results into container
2022-07-02 06:03:09,222:INFO:Uploading model into container now
2022-07-02 06:03:09,223:INFO:master_model_container: 14
2022-07-02 06:03:09,223:INFO:display_container: 2
2022-07-02 06:03:09,224:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=7584)
2022-07-02 06:03:09,224:INFO:create_model() successfully completed......................................
2022-07-02 06:03:09,338:INFO:SubProcess create_model() end ==================================
2022-07-02 06:03:09,339:INFO:Creating metrics dataframe
2022-07-02 06:03:09,358:INFO:Initializing AdaBoost Regressor
2022-07-02 06:03:09,359:INFO:Total runtime is 0.2964334448178609 minutes
2022-07-02 06:03:09,366:INFO:SubProcess create_model() called ==================================
2022-07-02 06:03:09,366:INFO:Initializing create_model()
2022-07-02 06:03:09,366:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024DCC67FDC0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024DCC67FCD0>, return_train_score=False, kwargs={})
2022-07-02 06:03:09,367:INFO:Checking exceptions
2022-07-02 06:03:09,369:INFO:Importing libraries
2022-07-02 06:03:09,369:INFO:Copying training dataset
2022-07-02 06:03:09,374:INFO:Defining folds
2022-07-02 06:03:09,374:INFO:Declaring metric variables
2022-07-02 06:03:09,381:INFO:Importing untrained model
2022-07-02 06:03:09,390:INFO:AdaBoost Regressor Imported successfully
2022-07-02 06:03:09,402:INFO:Starting cross validation
2022-07-02 06:03:09,403:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-02 06:03:09,600:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:09,622:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:09,623:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:09,688:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:09,696:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:09,702:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:09,709:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:09,735:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:09,840:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:09,856:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:09,882:INFO:Calculating mean and std
2022-07-02 06:03:09,887:INFO:Creating metrics dataframe
2022-07-02 06:03:09,895:INFO:Uploading results into container
2022-07-02 06:03:09,896:INFO:Uploading model into container now
2022-07-02 06:03:09,897:INFO:master_model_container: 15
2022-07-02 06:03:09,898:INFO:display_container: 2
2022-07-02 06:03:09,899:INFO:AdaBoostRegressor(random_state=7584)
2022-07-02 06:03:09,899:INFO:create_model() successfully completed......................................
2022-07-02 06:03:10,033:INFO:SubProcess create_model() end ==================================
2022-07-02 06:03:10,033:INFO:Creating metrics dataframe
2022-07-02 06:03:10,055:INFO:Initializing Gradient Boosting Regressor
2022-07-02 06:03:10,055:INFO:Total runtime is 0.3080334345499674 minutes
2022-07-02 06:03:10,061:INFO:SubProcess create_model() called ==================================
2022-07-02 06:03:10,062:INFO:Initializing create_model()
2022-07-02 06:03:10,063:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024DCC67FDC0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024DCC67FCD0>, return_train_score=False, kwargs={})
2022-07-02 06:03:10,063:INFO:Checking exceptions
2022-07-02 06:03:10,066:INFO:Importing libraries
2022-07-02 06:03:10,067:INFO:Copying training dataset
2022-07-02 06:03:10,073:INFO:Defining folds
2022-07-02 06:03:10,073:INFO:Declaring metric variables
2022-07-02 06:03:10,080:INFO:Importing untrained model
2022-07-02 06:03:10,088:INFO:Gradient Boosting Regressor Imported successfully
2022-07-02 06:03:10,103:INFO:Starting cross validation
2022-07-02 06:03:10,105:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-02 06:03:10,250:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:10,264:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:10,322:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:10,336:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:10,335:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:10,351:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:10,353:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:10,358:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:10,466:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:10,479:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:10,494:INFO:Calculating mean and std
2022-07-02 06:03:10,496:INFO:Creating metrics dataframe
2022-07-02 06:03:10,504:INFO:Uploading results into container
2022-07-02 06:03:10,506:INFO:Uploading model into container now
2022-07-02 06:03:10,507:INFO:master_model_container: 16
2022-07-02 06:03:10,508:INFO:display_container: 2
2022-07-02 06:03:10,509:INFO:GradientBoostingRegressor(random_state=7584)
2022-07-02 06:03:10,509:INFO:create_model() successfully completed......................................
2022-07-02 06:03:10,632:INFO:SubProcess create_model() end ==================================
2022-07-02 06:03:10,633:INFO:Creating metrics dataframe
2022-07-02 06:03:10,657:INFO:Initializing Extreme Gradient Boosting
2022-07-02 06:03:10,657:INFO:Total runtime is 0.31806672016779575 minutes
2022-07-02 06:03:10,664:INFO:SubProcess create_model() called ==================================
2022-07-02 06:03:10,665:INFO:Initializing create_model()
2022-07-02 06:03:10,665:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024DCC67FDC0>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024DCC67FCD0>, return_train_score=False, kwargs={})
2022-07-02 06:03:10,666:INFO:Checking exceptions
2022-07-02 06:03:10,669:INFO:Importing libraries
2022-07-02 06:03:10,670:INFO:Copying training dataset
2022-07-02 06:03:10,678:INFO:Defining folds
2022-07-02 06:03:10,679:INFO:Declaring metric variables
2022-07-02 06:03:10,690:INFO:Importing untrained model
2022-07-02 06:03:10,703:INFO:Extreme Gradient Boosting Imported successfully
2022-07-02 06:03:10,716:INFO:Starting cross validation
2022-07-02 06:03:10,717:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-02 06:03:11,561:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:11,624:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:11,654:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:11,662:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:11,670:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:11,731:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:11,741:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:11,769:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:11,806:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:11,816:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:11,829:INFO:Calculating mean and std
2022-07-02 06:03:11,832:INFO:Creating metrics dataframe
2022-07-02 06:03:11,839:INFO:Uploading results into container
2022-07-02 06:03:11,840:INFO:Uploading model into container now
2022-07-02 06:03:11,841:INFO:master_model_container: 17
2022-07-02 06:03:11,841:INFO:display_container: 2
2022-07-02 06:03:11,843:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=7584,
             reg_alpha=None, reg_lambda=None, ...)
2022-07-02 06:03:11,844:INFO:create_model() successfully completed......................................
2022-07-02 06:03:11,960:INFO:SubProcess create_model() end ==================================
2022-07-02 06:03:11,960:INFO:Creating metrics dataframe
2022-07-02 06:03:11,981:INFO:Initializing Light Gradient Boosting Machine
2022-07-02 06:03:11,981:INFO:Total runtime is 0.3401334603627522 minutes
2022-07-02 06:03:11,987:INFO:SubProcess create_model() called ==================================
2022-07-02 06:03:11,988:INFO:Initializing create_model()
2022-07-02 06:03:11,988:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024DCC67FDC0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024DCC67FCD0>, return_train_score=False, kwargs={})
2022-07-02 06:03:11,988:INFO:Checking exceptions
2022-07-02 06:03:11,990:INFO:Importing libraries
2022-07-02 06:03:11,990:INFO:Copying training dataset
2022-07-02 06:03:11,995:INFO:Defining folds
2022-07-02 06:03:11,996:INFO:Declaring metric variables
2022-07-02 06:03:12,001:INFO:Importing untrained model
2022-07-02 06:03:12,008:INFO:Light Gradient Boosting Machine Imported successfully
2022-07-02 06:03:12,021:INFO:Starting cross validation
2022-07-02 06:03:12,023:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-02 06:03:12,233:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:12,236:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:12,252:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:12,277:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:12,290:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:12,307:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:12,315:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:12,322:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:12,369:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:12,391:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:12,400:INFO:Calculating mean and std
2022-07-02 06:03:12,404:INFO:Creating metrics dataframe
2022-07-02 06:03:12,410:INFO:Uploading results into container
2022-07-02 06:03:12,411:INFO:Uploading model into container now
2022-07-02 06:03:12,412:INFO:master_model_container: 18
2022-07-02 06:03:12,412:INFO:display_container: 2
2022-07-02 06:03:12,412:INFO:LGBMRegressor(random_state=7584)
2022-07-02 06:03:12,413:INFO:create_model() successfully completed......................................
2022-07-02 06:03:12,523:INFO:SubProcess create_model() end ==================================
2022-07-02 06:03:12,523:INFO:Creating metrics dataframe
2022-07-02 06:03:12,543:INFO:Initializing CatBoost Regressor
2022-07-02 06:03:12,543:INFO:Total runtime is 0.34950013955434156 minutes
2022-07-02 06:03:12,549:INFO:SubProcess create_model() called ==================================
2022-07-02 06:03:12,549:INFO:Initializing create_model()
2022-07-02 06:03:12,549:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024DCC67FDC0>, estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024DCC67FCD0>, return_train_score=False, kwargs={})
2022-07-02 06:03:12,550:INFO:Checking exceptions
2022-07-02 06:03:12,552:INFO:Importing libraries
2022-07-02 06:03:12,552:INFO:Copying training dataset
2022-07-02 06:03:12,557:INFO:Defining folds
2022-07-02 06:03:12,558:INFO:Declaring metric variables
2022-07-02 06:03:12,564:INFO:Importing untrained model
2022-07-02 06:03:12,570:INFO:CatBoost Regressor Imported successfully
2022-07-02 06:03:12,583:INFO:Starting cross validation
2022-07-02 06:03:12,584:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-02 06:03:18,820:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:19,404:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:19,589:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:19,762:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:19,837:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:19,926:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:20,010:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:20,063:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:21,769:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:21,955:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:21,967:INFO:Calculating mean and std
2022-07-02 06:03:21,972:INFO:Creating metrics dataframe
2022-07-02 06:03:21,978:INFO:Uploading results into container
2022-07-02 06:03:21,980:INFO:Uploading model into container now
2022-07-02 06:03:21,981:INFO:master_model_container: 19
2022-07-02 06:03:21,981:INFO:display_container: 2
2022-07-02 06:03:21,981:INFO:<catboost.core.CatBoostRegressor object at 0x0000024DE2F4D6A0>
2022-07-02 06:03:21,981:INFO:create_model() successfully completed......................................
2022-07-02 06:03:22,107:INFO:SubProcess create_model() end ==================================
2022-07-02 06:03:22,107:INFO:Creating metrics dataframe
2022-07-02 06:03:22,133:INFO:Initializing Dummy Regressor
2022-07-02 06:03:22,133:INFO:Total runtime is 0.5093228459358214 minutes
2022-07-02 06:03:22,140:INFO:SubProcess create_model() called ==================================
2022-07-02 06:03:22,140:INFO:Initializing create_model()
2022-07-02 06:03:22,141:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024DCC67FDC0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024DCC67FCD0>, return_train_score=False, kwargs={})
2022-07-02 06:03:22,141:INFO:Checking exceptions
2022-07-02 06:03:22,144:INFO:Importing libraries
2022-07-02 06:03:22,144:INFO:Copying training dataset
2022-07-02 06:03:22,150:INFO:Defining folds
2022-07-02 06:03:22,150:INFO:Declaring metric variables
2022-07-02 06:03:22,161:INFO:Importing untrained model
2022-07-02 06:03:22,170:INFO:Dummy Regressor Imported successfully
2022-07-02 06:03:22,188:INFO:Starting cross validation
2022-07-02 06:03:22,190:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-02 06:03:22,257:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:22,268:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:22,278:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:22,291:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:22,303:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:22,316:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:22,331:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:22,347:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:22,363:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:22,380:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-07-02 06:03:22,394:INFO:Calculating mean and std
2022-07-02 06:03:22,400:INFO:Creating metrics dataframe
2022-07-02 06:03:22,410:INFO:Uploading results into container
2022-07-02 06:03:22,412:INFO:Uploading model into container now
2022-07-02 06:03:22,413:INFO:master_model_container: 20
2022-07-02 06:03:22,413:INFO:display_container: 2
2022-07-02 06:03:22,414:INFO:DummyRegressor()
2022-07-02 06:03:22,414:INFO:create_model() successfully completed......................................
2022-07-02 06:03:22,549:INFO:SubProcess create_model() end ==================================
2022-07-02 06:03:22,549:INFO:Creating metrics dataframe
2022-07-02 06:03:22,593:INFO:Initializing create_model()
2022-07-02 06:03:22,593:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024DCC67FDC0>, estimator=GradientBoostingRegressor(random_state=7584), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, return_train_score=False, kwargs={})
2022-07-02 06:03:22,593:INFO:Checking exceptions
2022-07-02 06:03:22,600:INFO:Importing libraries
2022-07-02 06:03:22,600:INFO:Copying training dataset
2022-07-02 06:03:22,604:INFO:Defining folds
2022-07-02 06:03:22,605:INFO:Declaring metric variables
2022-07-02 06:03:22,605:INFO:Importing untrained model
2022-07-02 06:03:22,606:INFO:Declaring custom model
2022-07-02 06:03:22,607:INFO:Gradient Boosting Regressor Imported successfully
2022-07-02 06:03:22,608:INFO:Cross validation set to False
2022-07-02 06:03:22,608:INFO:Fitting Model
2022-07-02 06:03:22,757:INFO:GradientBoostingRegressor(random_state=7584)
2022-07-02 06:03:22,757:INFO:create_model() successfully completed......................................
2022-07-02 06:03:22,944:INFO:master_model_container: 20
2022-07-02 06:03:22,945:INFO:display_container: 2
2022-07-02 06:03:22,945:INFO:GradientBoostingRegressor(random_state=7584)
2022-07-02 06:03:22,945:INFO:compare_models() successfully completed......................................
2022-07-02 06:03:22,990:INFO:Initializing plot_model()
2022-07-02 06:03:22,990:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=GradientBoostingRegressor(random_state=7584), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024DCC67FDC0>, system=True)
2022-07-02 06:03:22,990:INFO:Checking exceptions
2022-07-02 06:03:22,999:INFO:Preloading libraries
2022-07-02 06:03:23,018:INFO:Copying training dataset
2022-07-02 06:03:23,018:INFO:Plot type: residuals
2022-07-02 06:03:23,292:INFO:Fitting Model
2022-07-02 06:03:23,294:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but GradientBoostingRegressor was fitted with feature names
  warnings.warn(

2022-07-02 06:03:23,358:INFO:Scoring test/hold-out set
2022-07-02 06:03:24,230:INFO:Visual Rendered Successfully
2022-07-02 06:03:24,338:INFO:plot_model() successfully completed......................................
2022-07-02 06:03:24,358:INFO:Initializing plot_model()
2022-07-02 06:03:24,358:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=GradientBoostingRegressor(random_state=7584), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024DCC67FDC0>, system=True)
2022-07-02 06:03:24,358:INFO:Checking exceptions
2022-07-02 06:03:24,368:INFO:Preloading libraries
2022-07-02 06:03:24,387:INFO:Copying training dataset
2022-07-02 06:03:24,387:INFO:Plot type: feature
2022-07-02 06:03:24,387:WARNING:No coef_ found. Trying feature_importances_
2022-07-02 06:03:24,561:INFO:Visual Rendered Successfully
2022-07-02 06:03:24,660:INFO:plot_model() successfully completed......................................
2022-07-02 06:03:24,678:INFO:Initializing plot_model()
2022-07-02 06:03:24,678:INFO:plot_model(plot=error, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=GradientBoostingRegressor(random_state=7584), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024DCC67FDC0>, system=True)
2022-07-02 06:03:24,678:INFO:Checking exceptions
2022-07-02 06:03:24,683:INFO:Preloading libraries
2022-07-02 06:03:24,701:INFO:Copying training dataset
2022-07-02 06:03:24,701:INFO:Plot type: error
2022-07-02 06:03:24,739:INFO:Fitting Model
2022-07-02 06:03:24,739:WARNING:C:\ProgramData\Anaconda3\envs\lowcode\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but GradientBoostingRegressor was fitted with feature names
  warnings.warn(

2022-07-02 06:03:24,740:INFO:Scoring test/hold-out set
2022-07-02 06:03:25,130:INFO:Visual Rendered Successfully
2022-07-02 06:03:25,272:INFO:plot_model() successfully completed......................................
